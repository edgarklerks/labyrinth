/** Lexer for the first language **/
_digit : '0' - '9';
natural : '0' - '9' {_digit};
id : 'a' -'z';
left_brace : '{';
right_brace : '}';
!whitespace : '\t' | '\r' | '\n' | ' ';
<< import "lang1/ast" >>

Lang1 : Prog;

Prog : Command Prog << ast.NewProgram($0,$1) >> | Command << ast.NewProgram($0, ast.EmptyProgram()) >>;
Command: "left" << ast.NewLeft() >>
       | "right" << ast.NewRight() >>
       | "up" << ast.NewUp() >>
       | "down" << ast.NewDown() >>
       | "repeat" natural Command << ast.NewRepeat($1,$2) >>
       | left_brace Prog right_brace << ast.NewGroup($1) >>
       | "proc" id Command << ast.NewProc($1,$2) >>
       | "call" id <<ast.NewCall($1) >>
       | "if" Test Command "else" Command "fi" <<ast.NewIf($1,$2,$4)>>
       | "nop" id <<ast.NewNop($1)>>;

Test: "wall" Dir << ast.NewTest($0,$1) >>
    | "open" Dir << ast.NewTest($0, $1) >>
    | "robot" Dir << ast.NewTest($0,$1) >>
    | "rand" natural << ast.NewTest($0, $1) >>;
Dir: "left" | "right" | "up" | "down";
